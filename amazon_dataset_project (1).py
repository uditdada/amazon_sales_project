# -*- coding: utf-8 -*-
"""amazon_dataset_project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F3Ba3oB6wg6DRaisR9298d30OoJVU0d5
"""

import pandas as pd
import matplotlib.pyplot as plt

amazon_data=pd.read_csv("/content/amazon_dataset (4).csv")

amazon_data

amazon_data.columns

amazon_data['Date']

"""#drop columns"""

columns_to_drop=['Unnamed: 0','fulfilled-by','ship-country','currency','Sales Channel ']
amazon_data.drop(columns=columns_to_drop,axis=1,inplace=True)

out_daterange=amazon_data.loc[(amazon_data.Date<'04-01-2022')|(amazon_data.Date>='06-30-2022')]
out_daterange

"""# drop duplicates"""

duplited_col=amazon_data.apply(lambda col:col.duplicated().any())
duplited_col

amazon_data=amazon_data.drop_duplicates(subset=['ASIN'])

amazon_data=amazon_data.drop_duplicates(subset=['Order ID'])

amazon_data.loc[:,["ASIN","Order ID"]]

amazon_data['Qty'].unique()

amazon_data['Amount'].unique()

"""#fillna"""

amazon_data['Qty']=amazon_data['Qty'].fillna(0)

amazon_data['Amount']=amazon_data['Amount'].fillna(0)

amazon_data['ship-postal-code']=amazon_data['ship-postal-code'].fillna(0)

amazon_data['Courier Status']=amazon_data['Courier Status'].fillna('Unknown')

amazon_data['promotion-ids']=amazon_data['promotion-ids'].fillna('No Promotion')

amazon_data['Courier Status'].unique()

amazon_data['promotion-ids'].unique()

amazon_data['ship-city'].unique()

amazon_data.loc[amazon_data['ship-city']=="Nan"]

amazon_data['ship-state'].unique()

amazon_data['ship-postal-code'].unique()



"""#renaming columns"""

amazon_data=amazon_data.rename(columns={'B2B':'customer-type'})

amazon_data=amazon_data.rename(columns={'Amount':'order_amount_($)'})

amazon_data.columns

"""#renaming customer type values"""

amazon_data.loc[amazon_data['customer-type']==True,'customer-type']='Business'

amazon_data.loc[amazon_data['customer-type']==False,'customer-type']='customer'

"""#conversion INR to USD"""

exchange=0.0120988
amazon_data['order_amount_($)']=amazon_data['order_amount_($)'].apply(lambda x:x*exchange)



"""#adding month column and droping some dates"""

amazon_data['Date']=pd.to_datetime(amazon_data['Date'])

amazon_data['Months']=amazon_data['Date'].dt.month

amazon_data.drop(amazon_data[amazon_data['Date'].dt.month==3].index,inplace=True)

"""#saving file"""

amazon_data.to_csv("amazon_dataset.csv")

from google.colab import drive
drive.mount('/content/drive')

size_order = ['S', 'M', 'L',
'Xl','XS','XXL','3XL','4XL','5XL','6XL','Free']
amazon_data['size'] = pd.Categorical(amazon_data['Size'], categories=size_order,
ordered=True)
amazon_data

"""#analysis"""

#top 3 category_revenue products
category_revenue=amazon_data.groupby('Category')['order_amount_($)'].sum()
top_3=category_revenue.sort_values(ascending=False).head(3)
print(top_3)

#percentage_top3 products
total_revenue=category_revenue.sum()
top_3_per=(top_3/total_revenue)*100
print(top_3_per)

#plotting_revenue of top 3 products
plt.figure(figsize=(5,3))
top_3.plot(kind='bar',color='blue')
plt.title('top 3 category')
plt.xlabel('product category')
plt.ylabel('revenue')
plt.show()

bottom_3=category_revenue.sort_values().head(3)
print(bottom_3)

monthwise_revenue=amazon_data.groupby('Months')['order_amount_($)'].sum()
top_months=monthwise_revenue.sort_values(ascending=False).head(3)
top_months.index = pd.to_datetime(top_months.index, format='%m').strftime('%B')
print(top_months)

#plotting_revenue of top 3 months
plt.figure(figsize=(5,3))
top_months.plot(kind='bar',color='green')
plt.title('top 3 months')
plt.xlabel('months')
plt.ylabel('revenue')
plt.show()

#top 3 category_revenue products acc to average price
average_category_revenue=amazon_data.groupby('Category')['order_amount_($)'].mean()
top_5_average=average_category_revenue.sort_values(ascending=False).head(5)
print(top_5_average)

#plotting_revenue_average of top 5 products
plt.figure(figsize=(5,3))
top_5_average.plot(kind='pie')
plt.title('top 5 products')
plt.show()

#average_revenue acc to customer type
average_ctype_revenue=amazon_data.groupby('customer-type')['order_amount_($)'].mean()
customer_type_average=average_ctype_revenue.sort_values(ascending=False)
print(customer_type_average)

#plotting_revenue_average of top 5 products
plt.figure(figsize=(5,3))
customer_type_average.plot(kind='pie')
plt.title('customer type average')
plt.show()

#top 5 state_revenue acc to average price
total_state_revenue=amazon_data.groupby('ship-state')['order_amount_($)'].sum()
top_5_state=total_state_revenue.sort_values(ascending=False).head(5)
print(top_5_state)

#plotting_revenue of top 5 state
plt.figure(figsize=(5,3))
top_5_state.plot(kind='bar',color='orange')
plt.title('top 5 state')
plt.xlabel('state')
plt.ylabel('revenue')
plt.show()

#top 5 state_revenue acc to western dress
total_state_wes=amazon_data.query("Category=='Western Dress'").groupby('ship-state')['order_amount_($)'].sum()
top_5_state_wes=total_state_wes.sort_values(ascending=False).head(5)
print(top_5_state_wes)

#plotting_revenue of top 5 state
plt.figure(figsize=(5,3))
top_5_state.plot(kind='bar',color='red')
plt.title('top 5 state')
plt.xlabel('state')
plt.ylabel('revenue')
plt.show()

#top 5 state acc to bottom 3
total_state_bottom3=amazon_data.query("Category in ['Dupatta','Saree','Blouse']").groupby('ship-state')['order_amount_($)'].sum()
top_5_state_bottom=total_state_bottom3.sort_values(ascending=False).head(5)
print(top_5_state_bottom)

#plotting_revenue of top 5 state
plt.figure(figsize=(5,3))
top_5_state_bottom.plot(kind='bar',color='yellow')
plt.title('top 5 state')
plt.xlabel('state')
plt.ylabel('revenue')
plt.show()